import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Iris dataset from seaborn
df = sns.load_dataset('iris')

# 1. List down the features and their types
print("First 5 rows of the dataset:")
print(df.head())

print("\nFeature Types:")
print(df.dtypes)

# 2. Create a histogram for each feature in the dataset
df.hist(bins=15, figsize=(10, 6), layout=(2, 2), color='skyblue', edgecolor='black')
plt.suptitle("Histogram of Each Numeric Feature")
plt.tight_layout()
plt.show()

# 3. Create a boxplot for each feature in the dataset
numeric_columns = df.select_dtypes(include='number').columns

plt.figure(figsize=(12, 6))
for i, col in enumerate(numeric_columns, 1):
    plt.subplot(1, 4, i)
    sns.boxplot(y=df[col], color='lightcoral')
    plt.title(f'Boxplot of {col}')
plt.tight_layout()
plt.show()

# 4. Inference from distributions and outliers
print("\n=== Inference ===")
print("""
- Features:
  - sepal_length (numeric)
  - sepal_width (numeric)
  - petal_length (numeric)
  - petal_width (numeric)
  - species (nominal)

- Outliers:
  - 'sepal_width' shows some outliers (visible in boxplot).
  - Other features show relatively normal distribution.

- Distribution:
  - 'petal_length' and 'petal_width' show clear separation based on species.
  - 'sepal_width' has more variability and slight skewness.
""")

"""
Theory Explanation:

What the program does:
This program performs exploratory data analysis (EDA) on the Iris dataset using several visualizations, such as histograms and boxplots, to explore the distributions of numeric features and to detect any outliers or trends.

Key operations of the program:
1. **Data Loading**: The Iris dataset is loaded from Seaborn's built-in datasets.
2. **Feature Listing and Type Checking**: The program prints out the first 5 rows of the dataset and lists the data types of each feature (column).
3. **Histograms**: Histograms are created for each numeric feature to visualize the distribution of the features.
4. **Boxplots**: Boxplots are generated for each numeric feature to assess the distribution and detect outliers.
5. **Inference**: The program provides an interpretation of the observed distributions and any potential outliers based on the histograms and boxplots.

Observations/Conclusions:
- **Feature Types**: The dataset contains four numeric features (`sepal_length`, `sepal_width`, `petal_length`, and `petal_width`) and one categorical feature (`species`).
- **Histograms**:
  - All numeric features have somewhat normal or unimodal distributions, with some variance in spread.
  - `petal_length` and `petal_width` exhibit a clearer separation between species, which suggests their significance in classification tasks.
- **Boxplots**:
  - The `sepal_width` feature displays some noticeable outliers (values outside the whiskers), which should be investigated for potential data quality issues or special cases.
  - Other features show relatively few outliers.
- **Overall Inferences**:
  - `petal_length` and `petal_width` exhibit better separation across the species, making them more useful for classification.
  - `sepal_width` has more variability and some skewness, which might require transformation for certain analysis methods.
  - The dataset seems relatively clean, with few outliers and generally well-behaved distributions, making it a good candidate for classification tasks.
"""
