import pandas as pd

# Load the iris.csv dataset
df = pd.read_csv("iris.csv")
print(df.columns)
# 1. Summary Statistics (Grouped by Species)
print("1. Summary Statistics (Grouped by Species):\n")
grouped_stats = df.groupby('Species').describe()
print(grouped_stats)
species_numeric_lists = {}
for species in df['Species'].unique():
    species_df = df[df['Species'] == species].drop(columns='Species')
    species_numeric_lists[species] = species_df.values.tolist()

print("\nList of numeric values for each Species:")
for species, values in species_numeric_lists.items():
    print(f"\n{species}:\n{values[:5]} ...")
print("\n\n2. Basic Statistical Details for Each Species:\n")
for Species in df['Species'].unique():
    print(f"--- {Species} ---")
    Species_data = df[df['Species'] == Species].drop(columns='Species')
    print(Species_data.describe(percentiles=[.25, .5, .75]))
    print("\n")

'''
Theory Explanation:

What the program does:
This program performs statistical analysis on the Iris dataset by grouping the data based on species. It calculates and displays summary statistics for each species and organizes the numeric data values into species-specific lists.

Key operations of the program:
1. **Data Loading**: Loads the Iris dataset from a CSV file using pandas.
2. **Grouped Summary Statistics**: Uses `groupby()` and `describe()` to generate summary statistics (like mean, std, min, max, and percentiles) for each species.
3. **Data Extraction by Species**: Extracts the numeric data for each species and stores it as a list of lists in a dictionary, enabling easy access to raw values.
4. **Individual Species Statistics**: For each unique species, the program uses `describe()` again on the subset data to provide a more focused statistical summary including quartiles.

Observations/Conclusions:
- The use of `groupby()` and `describe()` is efficient for getting grouped statistics, which is crucial when comparing different classes or labels in a dataset.
- By removing the 'Species' column and storing only numerical values, the program prepares clean subsets for each species that could be useful for plotting, modeling, or further analysis.
- Displaying the first few records of each species gives a quick peek into the distribution and helps identify potential differences in measurements like petal length or sepal width.
- Such analysis is important in understanding data distribution patterns and variability among different categories, especially in classification tasks.

'''
